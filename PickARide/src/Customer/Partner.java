/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Customer;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.text.DateFormat;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.Vector;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;


/**
 *
 * @author mumu2015
 */
public class Partner extends javax.swing.JFrame {

public Connection connection;
public PreparedStatement pst;

    
    /**
     * Creates new form Partner
     */
    public Partner() {
        initComponents();
    }
    
    
    
    public void close(){
        
        WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jTextPContactNo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextPRentingHours = new javax.swing.JTextField();
        jBtnSAVE = new javax.swing.JButton();
        jBtnDELETE = new javax.swing.JButton();
        jBtnPRINT = new javax.swing.JButton();
        jBtnUPDATE = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jBtnBACK = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePartner = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextBikeID = new javax.swing.JTextField();
        jTextPartnerID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextPNIDNo = new javax.swing.JTextField();
        jTextPName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextPEmailAddress = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldSearchOrder = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1119, 480));

        jLabel6.setText("NID No*");

        jTextPContactNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextPContactNoActionPerformed(evt);
            }
        });

        jLabel7.setText("Renting Hours*");

        jTextPRentingHours.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextPRentingHoursActionPerformed(evt);
            }
        });

        jBtnSAVE.setBackground(new java.awt.Color(255, 153, 153));
        jBtnSAVE.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtnSAVE.setText("SAVE");
        jBtnSAVE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSAVEActionPerformed(evt);
            }
        });

        jBtnDELETE.setBackground(new java.awt.Color(255, 153, 153));
        jBtnDELETE.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtnDELETE.setText("DELETE");
        jBtnDELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDELETEActionPerformed(evt);
            }
        });

        jBtnPRINT.setBackground(new java.awt.Color(255, 153, 153));
        jBtnPRINT.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtnPRINT.setText("SHOW");
        jBtnPRINT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnPRINTActionPerformed(evt);
            }
        });

        jBtnUPDATE.setBackground(new java.awt.Color(255, 153, 153));
        jBtnUPDATE.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtnUPDATE.setText("UPDATE");
        jBtnUPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnUPDATEActionPerformed(evt);
            }
        });

        jLabel8.setText("Contact No*");

        jLabel1.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("PARTNER");

        jBtnBACK.setBackground(new java.awt.Color(255, 153, 153));
        jBtnBACK.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtnBACK.setText("BACK");
        jBtnBACK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnBACKActionPerformed(evt);
            }
        });

        jTablePartner.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Partner ID", "Bike ID", "Name", "NID No", "Email Address", "Contact No", "Renting Hours"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePartner.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePartnerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTablePartner);

        jLabel2.setText("Partner ID*");

        jLabel9.setText("Bike ID*");

        jTextBikeID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextBikeIDActionPerformed(evt);
            }
        });

        jLabel3.setText("Name*");

        jTextPNIDNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextPNIDNoActionPerformed(evt);
            }
        });

        jTextPName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextPNameActionPerformed(evt);
            }
        });

        jLabel5.setText("Email Address*");

        jTextPEmailAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextPEmailAddressActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 51, 51));
        jLabel10.setText("Search Here");

        jTextFieldSearchOrder.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSearchOrderKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("* Required Fields");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                                .addComponent(jTextPRentingHours, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextPContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextPEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextPNIDNo, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextPName, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextBikeID, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextPartnerID, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel4))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 626, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(147, 147, 147)
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldSearchOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBtnSAVE)
                        .addGap(18, 18, 18)
                        .addComponent(jBtnUPDATE)
                        .addGap(30, 30, 30)
                        .addComponent(jBtnDELETE)
                        .addGap(18, 18, 18)
                        .addComponent(jBtnPRINT)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addComponent(jBtnBACK)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(51, 51, 51)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jTextPartnerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextBikeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)
                                .addGap(95, 95, 95)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextPName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextPNIDNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextPEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextPContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextPRentingHours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextFieldSearchOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnSAVE)
                    .addComponent(jBtnUPDATE)
                    .addComponent(jBtnDELETE)
                    .addComponent(jBtnPRINT))
                .addGap(13, 13, 13)
                .addComponent(jBtnBACK)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextPContactNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextPContactNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextPContactNoActionPerformed

    private void jTextPRentingHoursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextPRentingHoursActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextPRentingHoursActionPerformed

    private void jBtnSAVEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSAVEActionPerformed
        // TODO add your handling code here:
        if(jTextPartnerID.getText().equals("")||jTextBikeID.getText().equals("")||
            jTextPName.getText().equals("")
            ||jTextPNIDNo.getText().equals("")||jTextPEmailAddress.getText().equals("")||
            jTextPContactNo.getText().equals("")||jTextPRentingHours.getText().equals("") ){

            JOptionPane.showMessageDialog (this, "Please enter required fields");
        }
        else{
            try
            {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=PickARide;selectMethod=cursor", "sa", "123456");

                String query = "insert into PARTNER (PartnerID,BikeId,PartnerName,P_NID_No,P_EmailAddress,P_Phone,P_RentingHours)values (?, ?, ?, ?, ? ,? ,?)";

                PreparedStatement pst = connection.prepareStatement(query);

                pst.setString(1,jTextPartnerID.getText());
                pst.setString(2,jTextBikeID.getText());
                pst.setString(3,jTextPName.getText());
                pst.setString(4,jTextPNIDNo.getText());
                pst.setString(5,jTextPEmailAddress.getText());
                pst.setString(6,jTextPContactNo.getText());
                pst.setString(7,jTextPRentingHours.getText());

                pst.executeUpdate();

                String data[]= {jTextPartnerID.getText(),jTextBikeID.getText(),
                    jTextPName.getText(),
                    jTextPNIDNo.getText(),jTextPEmailAddress.getText(),jTextPContactNo.getText(),
                    jTextPRentingHours.getText()};

                DefaultTableModel tblModel = (DefaultTableModel)jTablePartner.getModel();
                tblModel.addRow(data);// adds row

                JOptionPane.showMessageDialog (this,"Information added");

                jTextPartnerID.setText("");
                jTextBikeID.setText("");
                jTextPName.setText("");
                jTextPNIDNo.setText("");
                jTextPEmailAddress.setText("");
                jTextPContactNo.setText("");
                jTextPRentingHours.setText("");

            } catch(Exception e){
                JOptionPane.showMessageDialog (this, e.getMessage());
            }
        }
    }//GEN-LAST:event_jBtnSAVEActionPerformed

    private void jBtnDELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDELETEActionPerformed
        // TODO add your handling code here:

        DefaultTableModel tblModel = (DefaultTableModel)jTablePartner.getModel();

        //delete row
        if(jTablePartner.getSelectedRowCount()==1){
            try
            {
                String query = "delete from PARTNER where PartnerId=?";

                PreparedStatement pst = connection.prepareStatement(query);

                pst.setString(1,jTextPartnerID.getText());

                pst.executeUpdate();
                tblModel.removeRow(jTablePartner.getSelectedRow());
                JOptionPane.showMessageDialog (this,"Data has been deleted");

            } catch(Exception e){
                JOptionPane.showMessageDialog (this, e.getMessage());
            }
        }
        else {

            if(jTablePartner.getRowCount()==0)
            JOptionPane.showMessageDialog (this, "Table is empty");

            else
            JOptionPane.showMessageDialog (this, "Please select single row");
        }
        jTextPartnerID.setText("");
        jTextBikeID.setText("");
        jTextPName.setText("");
        jTextPNIDNo.setText("");
        jTextPEmailAddress.setText("");
        jTextPContactNo.setText("");
        jTextPRentingHours.setText("");
    }//GEN-LAST:event_jBtnDELETEActionPerformed

    private void jBtnPRINTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnPRINTActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            connection = DriverManager.getConnection(
                "jdbc:sqlserver://localhost:1433;databaseName=PickARide;selectMethod=cursor", "sa", "123456");

            //System.out.println("DATABASE NAME IS:" + connection.getMetaData().getDatabaseProductName());

            Statement statement = connection.createStatement();
            ResultSet resultSet = statement
            .executeQuery("SELECT * FROM PARTNER");

            while (resultSet.next()) {
                String PartnerID = resultSet.getString("PartnerId");
                String BikeID = resultSet.getString("BikeId");
                String PartnerName = resultSet.getString("PartnerName");
                String P_NID_No = resultSet.getString("P_NID_No");
                String P_EmailAddress = resultSet.getString("P_EmailAddress");
                String P_Phone = resultSet.getString("P_Phone");
                String P_RentingHours = resultSet.getString("P_RentingHours");

                String tbData[]={PartnerID,BikeID,PartnerName,P_NID_No,
                    P_EmailAddress,P_Phone,P_RentingHours};

                DefaultTableModel tblModel = (DefaultTableModel)jTablePartner.getModel();
                tblModel.addRow(tbData);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jBtnPRINTActionPerformed

    private void jBtnUPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnUPDATEActionPerformed
        // TODO add your handling code here:

        DefaultTableModel tblModel = (DefaultTableModel)jTablePartner.getModel();

        if(jTablePartner.getSelectedRowCount()==1){
            String PartnerID = jTextPartnerID.getText();
            String BikeID = jTextBikeID.getText();
            String PName = jTextPName.getText();
            String PNIDNo = jTextPNIDNo.getText();
            String PEmailAddress = jTextPEmailAddress.getText();
            String PContactNo = jTextPContactNo.getText();
            String PRentingHours = jTextPRentingHours.getText();

            try
            {

                String query = "update PARTNER set BikeId=?,PartnerName=?,P_NID_No=?,P_EmailAddress=?,P_Phone=?,P_RentingHours=? where PartnerId = ?";

                PreparedStatement pst = connection.prepareStatement(query);

                pst.setString(1,jTextBikeID.getText());
                pst.setString(2,jTextPName.getText());
                pst.setString(3,jTextPNIDNo.getText());
                pst.setString(4,jTextPEmailAddress.getText());
                pst.setString(5,jTextPContactNo.getText());
                pst.setString(6,jTextPRentingHours.getText());
                pst.setString(7,jTextPartnerID.getText());

                pst.executeUpdate();
                //set updated value to table row
                tblModel.setValueAt(PartnerID,jTablePartner.getSelectedRow(),0);
                tblModel.setValueAt(BikeID,jTablePartner.getSelectedRow(),1);
                tblModel.setValueAt(PName,jTablePartner.getSelectedRow(),2);
                tblModel.setValueAt(PNIDNo,jTablePartner.getSelectedRow(),3);
                tblModel.setValueAt(PEmailAddress,jTablePartner.getSelectedRow(),4);
                tblModel.setValueAt(PContactNo,jTablePartner.getSelectedRow(),5);
                tblModel.setValueAt(PRentingHours,jTablePartner.getSelectedRow(),6);

                JOptionPane.showMessageDialog (this,"Update is successful");

                jTextPartnerID.setText("");
                jTextBikeID.setText("");
                jTextPName.setText("");
                jTextPNIDNo.setText("");
                jTextPEmailAddress.setText("");
                jTextPContactNo.setText("");
                jTextPRentingHours.setText("");

            } catch(Exception e){
                JOptionPane.showMessageDialog (this, e.getMessage());
            }

            //update message
            //JOptionPane.showMessageDialog (this, "Update is successful");
        }
        else{
            if(jTablePartner.getRowCount()==0)
            JOptionPane.showMessageDialog (this, "Table is empty");
            else
            JOptionPane.showMessageDialog (this, "Please select single row");

        }
    }//GEN-LAST:event_jBtnUPDATEActionPerformed

    private void jBtnBACKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnBACKActionPerformed
        // TODO add your handling code here:

        close();
        HomePage hp = new HomePage() ;
        hp.setVisible(true);
    }//GEN-LAST:event_jBtnBACKActionPerformed

    private void jTablePartnerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePartnerMouseClicked
        // TODO add your handling code here:

        DefaultTableModel tblModel = (DefaultTableModel)jTablePartner.getModel();

        //when row is selected, set data to textfield
        String PartnerID = tblModel.getValueAt(jTablePartner.getSelectedRow(),0).toString();
        String BikeID = tblModel.getValueAt(jTablePartner.getSelectedRow(),1).toString();
        String PName = tblModel.getValueAt(jTablePartner.getSelectedRow(),2).toString();
        String PNIDNo = tblModel.getValueAt(jTablePartner.getSelectedRow(),3).toString();
        String PEmailAddress = tblModel.getValueAt(jTablePartner.getSelectedRow(),4).toString();
        String PContactNo = tblModel.getValueAt(jTablePartner.getSelectedRow(),5).toString();
        String PRentingHours = tblModel.getValueAt(jTablePartner.getSelectedRow(),6).toString();

        //set to textfield
        jTextPartnerID.setText(PartnerID);
        jTextBikeID.setText(BikeID);
        jTextPName.setText(PName);
        jTextPNIDNo.setText(PNIDNo);
        jTextPEmailAddress.setText(PEmailAddress);
        jTextPContactNo.setText(PContactNo);
        jTextPRentingHours.setText(PRentingHours);
    }//GEN-LAST:event_jTablePartnerMouseClicked

    private void jTextBikeIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextBikeIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextBikeIDActionPerformed

    private void jTextPNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextPNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextPNameActionPerformed

    private void jTextPEmailAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextPEmailAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextPEmailAddressActionPerformed

    private void jTextFieldSearchOrderKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchOrderKeyReleased
        // TODO add your handling code here:

        DefaultTableModel table = (DefaultTableModel)jTablePartner.getModel();
        String search = jTextFieldSearchOrder.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(table);
        jTablePartner.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_jTextFieldSearchOrderKeyReleased

    private void jTextPNIDNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextPNIDNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextPNIDNoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Partner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Partner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Partner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Partner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Partner().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnBACK;
    private javax.swing.JButton jBtnDELETE;
    private javax.swing.JButton jBtnPRINT;
    private javax.swing.JButton jBtnSAVE;
    private javax.swing.JButton jBtnUPDATE;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePartner;
    private javax.swing.JTextField jTextBikeID;
    private javax.swing.JTextField jTextFieldSearchOrder;
    private javax.swing.JTextField jTextPContactNo;
    private javax.swing.JTextField jTextPEmailAddress;
    private javax.swing.JTextField jTextPNIDNo;
    private javax.swing.JTextField jTextPName;
    private javax.swing.JTextField jTextPRentingHours;
    private javax.swing.JTextField jTextPartnerID;
    // End of variables declaration//GEN-END:variables
}
