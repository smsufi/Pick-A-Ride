/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Customer;


import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.text.DateFormat;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.Vector;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;


/**
 *
 * @author mumu2015
 */
public class Bike extends javax.swing.JFrame {

    
    public Connection connection;
    public PreparedStatement pst;
    
    /**
     * Creates new form Bike
     */
    public Bike() {
        initComponents();
    }

     
    public void close(){
        
        WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextModelNo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableBike = new javax.swing.JTable();
        jTextBikeID = new javax.swing.JTextField();
        jTextEngineNo = new javax.swing.JTextField();
        jTextLicenseNo = new javax.swing.JTextField();
        jTextOnRent = new javax.swing.JTextField();
        jTextAvailableFrom = new javax.swing.JTextField();
        jTextAvailableTill = new javax.swing.JTextField();
        jBtnDELETE = new javax.swing.JButton();
        jBtnUPDATE = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jBtnSAVE = new javax.swing.JButton();
        jBtnPRINT = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jBtnBACK = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldSearchOrder = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1119, 490));

        jTextModelNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextModelNoActionPerformed(evt);
            }
        });

        jTableBike.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bike ID", "Model No", "Lisence No", "Engine No", "On Rent", "Available From", "Available Till"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableBike.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableBikeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableBike);

        jTextLicenseNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextLicenseNoActionPerformed(evt);
            }
        });

        jTextOnRent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextOnRentActionPerformed(evt);
            }
        });

        jTextAvailableFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextAvailableFromActionPerformed(evt);
            }
        });

        jTextAvailableTill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextAvailableTillActionPerformed(evt);
            }
        });

        jBtnDELETE.setBackground(new java.awt.Color(255, 153, 153));
        jBtnDELETE.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtnDELETE.setText("DELETE");
        jBtnDELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDELETEActionPerformed(evt);
            }
        });

        jBtnUPDATE.setBackground(new java.awt.Color(255, 153, 153));
        jBtnUPDATE.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtnUPDATE.setText("UPDATE");
        jBtnUPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnUPDATEActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("BIKE");

        jLabel2.setText("Bike ID*");

        jLabel3.setText("License No*");

        jLabel4.setText("Model No*");

        jLabel5.setText("On Rent*");

        jLabel6.setText("Engine No*");

        jLabel7.setText("Available Till*");

        jBtnSAVE.setBackground(new java.awt.Color(255, 153, 153));
        jBtnSAVE.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtnSAVE.setText("SAVE");
        jBtnSAVE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSAVEActionPerformed(evt);
            }
        });

        jBtnPRINT.setBackground(new java.awt.Color(255, 153, 153));
        jBtnPRINT.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtnPRINT.setText("SHOW");
        jBtnPRINT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnPRINTActionPerformed(evt);
            }
        });

        jLabel8.setText("Available From*");

        jBtnBACK.setBackground(new java.awt.Color(255, 153, 153));
        jBtnBACK.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBtnBACK.setText("BACK");
        jBtnBACK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnBACKActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 51, 51));
        jLabel10.setText("Search Here");

        jTextFieldSearchOrder.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSearchOrderKeyReleased(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(153, 153, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setText("ORDER");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jLabel9.setText("* Required Fields");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                                .addComponent(jTextAvailableTill, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextAvailableFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextOnRent, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextEngineNo, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextLicenseNo, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextModelNo, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextBikeID, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(jButton1)
                                .addGap(30, 30, 30)
                                .addComponent(jBtnBACK)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jBtnSAVE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jBtnUPDATE)
                                .addGap(18, 18, 18)
                                .addComponent(jBtnDELETE)
                                .addGap(18, 18, 18)
                                .addComponent(jBtnPRINT)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(105, 105, 105)
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldSearchOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE)
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextBikeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextModelNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextLicenseNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextEngineNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextOnRent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextAvailableFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextAvailableTill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(jTextFieldSearchOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jBtnSAVE)
                                    .addComponent(jBtnUPDATE))))
                        .addContainerGap(64, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBtnDELETE)
                            .addComponent(jBtnPRINT))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jBtnBACK))
                        .addGap(26, 26, 26))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextModelNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextModelNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextModelNoActionPerformed

    private void jTableBikeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableBikeMouseClicked
        // TODO add your handling code here:

        DefaultTableModel tblModel = (DefaultTableModel)jTableBike.getModel();

        //when row is selected, set data to textfield
        String BikeID = tblModel.getValueAt(jTableBike.getSelectedRow(),0).toString();
        String ModelNo = tblModel.getValueAt(jTableBike.getSelectedRow(),1).toString();
        String LicenseNo = tblModel.getValueAt(jTableBike.getSelectedRow(),2).toString();
        String Engine = tblModel.getValueAt(jTableBike.getSelectedRow(),3).toString();
        String OnRent = tblModel.getValueAt(jTableBike.getSelectedRow(),4).toString();
        String AvailableFrom = tblModel.getValueAt(jTableBike.getSelectedRow(),5).toString();
        String AvailableTill = tblModel.getValueAt(jTableBike.getSelectedRow(),6).toString();

        //set to textfield
        jTextBikeID.setText(BikeID);
        jTextModelNo.setText(ModelNo);
        jTextLicenseNo.setText(LicenseNo);
        jTextEngineNo.setText(Engine);
        jTextOnRent.setText(OnRent);
        jTextAvailableFrom.setText(AvailableFrom);
        jTextAvailableTill.setText(AvailableTill);

    }//GEN-LAST:event_jTableBikeMouseClicked

    private void jTextLicenseNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextLicenseNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextLicenseNoActionPerformed

    private void jTextOnRentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextOnRentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextOnRentActionPerformed

    private void jTextAvailableFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextAvailableFromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextAvailableFromActionPerformed

    private void jTextAvailableTillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextAvailableTillActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextAvailableTillActionPerformed

    private void jBtnDELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDELETEActionPerformed
        // TODO add your handling code here:

        DefaultTableModel tblModel = (DefaultTableModel)jTableBike.getModel();

        //delete row
        if(jTableBike.getSelectedRowCount()==1){
            try
            {
                String query = "delete from BIKE where BikeID=?";

                PreparedStatement pst = connection.prepareStatement(query);

                pst.setString(1,jTextBikeID.getText());

                pst.executeUpdate();
                tblModel.removeRow(jTableBike.getSelectedRow());
                JOptionPane.showMessageDialog (this,"Data has been deleted");

            } catch(Exception e){
                JOptionPane.showMessageDialog (this, e.getMessage());
            }
        }
        else {

            if(jTableBike.getRowCount()==0)
            JOptionPane.showMessageDialog (this, "Table is empty");

            else
            JOptionPane.showMessageDialog (this, "Please select single row");
        }
        jTextBikeID.setText("");
        jTextModelNo.setText("");
        jTextLicenseNo.setText("");
        jTextEngineNo.setText("");
        jTextOnRent.setText("");
        jTextAvailableFrom.setText("");
        jTextAvailableTill.setText("");

    }//GEN-LAST:event_jBtnDELETEActionPerformed

    private void jBtnUPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnUPDATEActionPerformed
        // TODO add your handling code here:

        DefaultTableModel tblModel = (DefaultTableModel)jTableBike.getModel();

        if(jTableBike.getSelectedRowCount()==1){
            String BikeID = jTextBikeID.getText();
            String ModelNo = jTextModelNo.getText();
            String LicenseNo = jTextLicenseNo.getText();
            String EngineNo = jTextEngineNo.getText();
            String OnRent = jTextOnRent.getText();
            String AvailableFrom = jTextAvailableFrom.getText();
            String AvailableTill = jTextAvailableTill.getText();

            try
            {

                String query = "update Bike set ModelNo=?,LicenseNo=?,Engine=?,OnRent=?,AvailableFrom=?,AvailableTill=? where BikeId = ?";

                PreparedStatement pst = connection.prepareStatement(query);

               
                pst.setString(1,jTextModelNo.getText());
                pst.setString(2,jTextLicenseNo.getText());
                pst.setString(3,jTextEngineNo.getText());
                pst.setString(4,jTextOnRent.getText());
                pst.setString(5,jTextAvailableFrom.getText());
                pst.setString(6,jTextAvailableTill.getText());
                pst.setString(7,jTextBikeID.getText());

                pst.executeUpdate();
                //set updated value to table row
                tblModel.setValueAt(BikeID,jTableBike.getSelectedRow(),0);
                tblModel.setValueAt(ModelNo,jTableBike.getSelectedRow(),1);
                tblModel.setValueAt(LicenseNo,jTableBike.getSelectedRow(),2);
                tblModel.setValueAt(EngineNo,jTableBike.getSelectedRow(),3);
                tblModel.setValueAt(OnRent,jTableBike.getSelectedRow(),4);
                tblModel.setValueAt(AvailableFrom,jTableBike.getSelectedRow(),5);
                tblModel.setValueAt(AvailableTill,jTableBike.getSelectedRow(),6);

                JOptionPane.showMessageDialog (this,"Update is successful");

                jTextBikeID.setText("");
                jTextModelNo.setText("");
                jTextLicenseNo.setText("");
                jTextEngineNo.setText("");
                jTextOnRent.setText("");
                jTextAvailableFrom.setText("");
                jTextAvailableTill.setText("");

            } catch(Exception e){
                JOptionPane.showMessageDialog (this, e.getMessage());
            }

            //update message
            //JOptionPane.showMessageDialog (this, "Update is successful");
        }
        else{
            if(jTableBike.getRowCount()==0)
            JOptionPane.showMessageDialog (this, "Table is empty");
            else
            JOptionPane.showMessageDialog (this, "Please select single row");

        }

    }//GEN-LAST:event_jBtnUPDATEActionPerformed

    private void jBtnSAVEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSAVEActionPerformed
        // TODO add your handling code here:
        if(jTextBikeID.getText().equals("")||
            jTextModelNo.getText().equals("")||jTextLicenseNo.getText().equals("")
            ||jTextEngineNo.getText().equals("")||jTextOnRent.getText().equals("")||
            jTextAvailableFrom.getText().equals("")||jTextAvailableTill.getText().equals("") ){

            JOptionPane.showMessageDialog (this, "Please enter required fields");
        }
        else{
            try
            {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=PickARide;selectMethod=cursor", "sa", "123456");

                String query = "insert into Bike (BikeId,ModelNo,LicenseNo,Engine,OnRent,AvailableFrom,AvailableTill)values (?, ?, ?, ?, ? ,? ,?)";

                PreparedStatement pst = connection.prepareStatement(query);

                pst.setString(1,jTextBikeID.getText());
                pst.setString(2,jTextModelNo.getText());
                pst.setString(3,jTextLicenseNo.getText());
                pst.setString(4,jTextEngineNo.getText());
                pst.setString(5,jTextOnRent.getText());
                pst.setString(6,jTextAvailableFrom.getText());
                pst.setString(7,jTextAvailableTill.getText());

                pst.executeUpdate();

                String data[]= {jTextBikeID.getText(),
                    jTextModelNo.getText(),jTextLicenseNo.getText(),
                    jTextEngineNo.getText(),jTextOnRent.getText(),jTextAvailableFrom.getText(),
                    jTextAvailableTill.getText()};

                DefaultTableModel tblModel = (DefaultTableModel)jTableBike.getModel();
                tblModel.addRow(data);// adds row

                JOptionPane.showMessageDialog (this,"Information added");

                jTextBikeID.setText("");
                jTextModelNo.setText("");
                jTextLicenseNo.setText("");
                jTextEngineNo.setText("");
                jTextOnRent.setText("");
                jTextAvailableFrom.setText("");
                jTextAvailableTill.setText("");

            } catch(Exception e){
                JOptionPane.showMessageDialog (this, e.getMessage());
            }
        }

    }//GEN-LAST:event_jBtnSAVEActionPerformed

    private void jBtnPRINTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnPRINTActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            connection = DriverManager.getConnection(
                "jdbc:sqlserver://localhost:1433;databaseName=PickARide;selectMethod=cursor", "sa", "123456");

            //System.out.println("DATABASE NAME IS:" + connection.getMetaData().getDatabaseProductName());

            Statement statement = connection.createStatement();
            ResultSet resultSet = statement
            .executeQuery("SELECT * FROM BIKE");

            while (resultSet.next()) {
                String BikeID = resultSet.getString("BikeId");
                String ModelNo = resultSet.getString("ModelNo");
                String LicenseNo = resultSet.getString("LicenseNo");
                String EngineNo = resultSet.getString("Engine");
                String OnRent = resultSet.getString("OnRent");
                String AvailableFrom = resultSet.getString("AvailableFrom");
                String AvailableTill = resultSet.getString("AvailableTill");

                String tbData[]={BikeID,ModelNo,LicenseNo,
                    EngineNo,OnRent,AvailableFrom, AvailableTill};

                DefaultTableModel tblModel = (DefaultTableModel)jTableBike.getModel();
                tblModel.addRow(tbData);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jBtnPRINTActionPerformed

    private void jBtnBACKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnBACKActionPerformed
        // TODO add your handling code here:

        close();
        HomePage hp = new HomePage() ;
        hp.setVisible(true);

    }//GEN-LAST:event_jBtnBACKActionPerformed

    private void jTextFieldSearchOrderKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchOrderKeyReleased
        // TODO add your handling code here:

        DefaultTableModel table = (DefaultTableModel)jTableBike.getModel();
        String search = jTextFieldSearchOrder.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(table);
        jTableBike.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_jTextFieldSearchOrderKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        close();
        OF of = new OF() ;
        of.setVisible(true);

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bike.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bike.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bike.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bike.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bike().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnBACK;
    private javax.swing.JButton jBtnDELETE;
    private javax.swing.JButton jBtnPRINT;
    private javax.swing.JButton jBtnSAVE;
    private javax.swing.JButton jBtnUPDATE;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableBike;
    private javax.swing.JTextField jTextAvailableFrom;
    private javax.swing.JTextField jTextAvailableTill;
    private javax.swing.JTextField jTextBikeID;
    private javax.swing.JTextField jTextEngineNo;
    private javax.swing.JTextField jTextFieldSearchOrder;
    private javax.swing.JTextField jTextLicenseNo;
    private javax.swing.JTextField jTextModelNo;
    private javax.swing.JTextField jTextOnRent;
    // End of variables declaration//GEN-END:variables
}
