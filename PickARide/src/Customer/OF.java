/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Customer;

import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author mumu2015
 */
public class OF extends javax.swing.JFrame {

    
    public Connection connection;
    public PreparedStatement pst;
    
    /**
     * Creates new form OF
     */
    public OF() {
        initComponents();
    }

    public void close(){
        
        WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane6 = new javax.swing.JScrollPane();
        jTableBike = new javax.swing.JTable();
        jTextFieldCustomerSearch = new javax.swing.JTextField();
        jButtonPrintCustomer = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButtonPrintBike = new javax.swing.JButton();
        jTextFieldSearchBike = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldCustomerId = new javax.swing.JTextField();
        jTextFieldBikeId = new javax.swing.JTextField();
        jTextFieldContactNo = new javax.swing.JTextField();
        jTextFieldTotalAmount = new javax.swing.JTextField();
        jTextFieldPaid = new javax.swing.JTextField();
        jTextFieldDue = new javax.swing.JTextField();
        jButtonAdd = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButtonBack = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableOrder = new javax.swing.JTable();
        jTextFieldSearchOrder = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldOrderId = new javax.swing.JTextField();
        jButtonPrint = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldDate = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jButtonCustomerReg = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableCustomer = new javax.swing.JTable();
        jButtonUpdateBike = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTableBike.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bike ID", "Model No", "Lisence No", "Engine No", "On Rent", "Available From", "Available Till"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(jTableBike);

        jTextFieldCustomerSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCustomerSearchActionPerformed(evt);
            }
        });
        jTextFieldCustomerSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldCustomerSearchKeyReleased(evt);
            }
        });

        jButtonPrintCustomer.setBackground(new java.awt.Color(102, 153, 255));
        jButtonPrintCustomer.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jButtonPrintCustomer.setText("SHOW DATA");
        jButtonPrintCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrintCustomerActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("Search Customer");

        jButtonPrintBike.setBackground(new java.awt.Color(102, 153, 255));
        jButtonPrintBike.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jButtonPrintBike.setText("SHOW DATA");
        jButtonPrintBike.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrintBikeActionPerformed(evt);
            }
        });

        jTextFieldSearchBike.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSearchBikeKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 51));
        jLabel2.setText("Search Bike");

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 255), new java.awt.Color(255, 198, 206), new java.awt.Color(51, 51, 51), new java.awt.Color(0, 255, 51)));
        jPanel1.setForeground(new java.awt.Color(255, 153, 153));

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 51, 51));
        jLabel3.setText("ORDER FORM");

        jLabel4.setText("Customer ID*");

        jLabel5.setText("Bike ID*");

        jLabel6.setText("Contact No*");

        jLabel7.setText("Total Amount*");

        jLabel8.setText("Paid*");

        jLabel9.setText("Due*");

        jButtonAdd.setBackground(new java.awt.Color(255, 153, 153));
        jButtonAdd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonAdd.setText("ADD");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonUpdate.setBackground(new java.awt.Color(255, 153, 153));
        jButtonUpdate.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonUpdate.setText("UPDATE");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonBack.setBackground(new java.awt.Color(255, 153, 153));
        jButtonBack.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonBack.setText("BACK");
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        jTableOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Customer ID", "Bike ID", "Contact No", "Total Price", "Paid", "Due", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableOrderMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTableOrder);

        jTextFieldSearchOrder.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSearchOrderKeyReleased(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 51, 51));
        jLabel10.setText("Search Here");

        jLabel11.setText("Order ID*");

        jButtonPrint.setBackground(new java.awt.Color(102, 153, 255));
        jButtonPrint.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jButtonPrint.setText("SHOW DATA");
        jButtonPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrintActionPerformed(evt);
            }
        });

        jLabel12.setText("Date*");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 0, 0));
        jLabel13.setText("* Required Fields");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel11)
                                    .addComponent(jButtonAdd))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(52, 52, 52)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextFieldPaid)
                                            .addComponent(jTextFieldDue, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                                            .addComponent(jTextFieldOrderId, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                                            .addComponent(jTextFieldTotalAmount)
                                            .addComponent(jTextFieldContactNo)
                                            .addComponent(jTextFieldBikeId)
                                            .addComponent(jTextFieldCustomerId)
                                            .addComponent(jTextFieldDate)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(43, 43, 43)
                                        .addComponent(jButtonUpdate)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                                        .addComponent(jButtonBack))))
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldSearchOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(jButtonPrint)
                                .addGap(416, 416, 416))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel11)
                                    .addComponent(jTextFieldOrderId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jTextFieldCustomerId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(jTextFieldBikeId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(jTextFieldContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(jTextFieldTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(jTextFieldPaid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(jTextFieldDue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(jTextFieldDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTextFieldSearchOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButtonPrint)))
                                .addGap(28, 28, 28)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonAdd))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonUpdate)
                            .addComponent(jButtonBack))))
                .addGap(40, 40, 40))
        );

        jButtonCustomerReg.setBackground(new java.awt.Color(204, 102, 255));
        jButtonCustomerReg.setText("CUSTOMER REGISTRATION");
        jButtonCustomerReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCustomerRegActionPerformed(evt);
            }
        });

        jTableCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer ID", "Customer Name", "Present Address", "Permanent Address", "NID No", "E mail", "Passport No", "Contact No"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableCustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCustomerMouseClicked(evt);
            }
        });
        jTableCustomer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTableCustomerKeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(jTableCustomer);

        jButtonUpdateBike.setBackground(new java.awt.Color(204, 102, 255));
        jButtonUpdateBike.setText("UPDATE BIKE");
        jButtonUpdateBike.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateBikeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldCustomerSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(jButtonPrintCustomer)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonCustomerReg))
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jTextFieldSearchBike, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(28, 28, 28)
                                    .addComponent(jButtonPrintBike)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonUpdateBike))
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(16, 16, 16))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldSearchBike, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonPrintBike)
                            .addComponent(jButtonUpdateBike))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldCustomerSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonCustomerReg)
                            .addComponent(jButtonPrintCustomer))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldCustomerSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCustomerSearchActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jTextFieldCustomerSearchActionPerformed

    private void jTextFieldCustomerSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCustomerSearchKeyReleased
        // TODO add your handling code here:
      DefaultTableModel table = (DefaultTableModel)jTableCustomer.getModel();
      String search = jTextFieldCustomerSearch.getText();
      TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(table);
      jTableCustomer.setRowSorter(tr);
      tr.setRowFilter(RowFilter.regexFilter(search));


    }//GEN-LAST:event_jTextFieldCustomerSearchKeyReleased

    private void jButtonPrintCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrintCustomerActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=PickARide;selectMethod=cursor", "sa", "123456");

            //System.out.println("DATABASE NAME IS:" + connection.getMetaData().getDatabaseProductName());

            Statement statement = connection.createStatement();
            ResultSet resultSet = statement
                    .executeQuery("SELECT * FROM CUSTOMER");
            
            
            while (resultSet.next()) {
               String CustomerId = resultSet.getString("CustomerId");
               String CustomerName = resultSet.getString("CustomerName");
               String PresentAddress = resultSet.getString("PresentAddress");
               String PermanentAddress = resultSet.getString("PermanentAddress");
               String C_NID_No = resultSet.getString("C_NID_No");
               String C_Email = resultSet.getString("C_EmailAddress");
               String C_PassportNo = resultSet.getString("C_PassportNo");
               String C_Phone = resultSet.getString("C_Phone");
               
               String tbData[]={CustomerId,CustomerName,PresentAddress,PermanentAddress,
               C_NID_No,C_Email,C_PassportNo,C_Phone};
               
               DefaultTableModel tblModel = (DefaultTableModel)jTableCustomer.getModel();
               tblModel.addRow(tbData); 
               
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_jButtonPrintCustomerActionPerformed

    private void jTableCustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCustomerMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableCustomerMouseClicked

    private void jTableCustomerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableCustomerKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_jTableCustomerKeyPressed

    private void jButtonPrintBikeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrintBikeActionPerformed
        // TODO add your handling code here:
                try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            connection = DriverManager.getConnection(
                "jdbc:sqlserver://localhost:1433;databaseName=PickARide;selectMethod=cursor", "sa", "123456");

            //System.out.println("DATABASE NAME IS:" + connection.getMetaData().getDatabaseProductName());

            Statement statement = connection.createStatement();
            ResultSet resultSet = statement
            .executeQuery("SELECT * FROM BIKE WHERE OnRent LIKE(SELECT OnRent FROM BIKE WHERE OnRent LIKE 'No')");

            while (resultSet.next()) {
                String BikeID = resultSet.getString("BikeId");
                String ModelNo = resultSet.getString("ModelNo");
                String LicenseNo = resultSet.getString("LicenseNo");
                String EngineNo = resultSet.getString("Engine");
                String OnRent = resultSet.getString("OnRent");
                String AvailableFrom = resultSet.getString("AvailableFrom");
                String AvailableTill = resultSet.getString("AvailableTill");

                String tbData[]={BikeID,ModelNo,LicenseNo,
                    EngineNo,OnRent,AvailableFrom, AvailableTill};

                DefaultTableModel tblModel = (DefaultTableModel)jTableBike.getModel();
                tblModel.addRow(tbData);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        
    }//GEN-LAST:event_jButtonPrintBikeActionPerformed

    private void jTextFieldSearchBikeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchBikeKeyReleased
        // TODO add your handling code here:
        
        DefaultTableModel table = (DefaultTableModel)jTableBike.getModel();
      String search = jTextFieldSearchBike.getText();
      TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(table);
      jTableBike.setRowSorter(tr);
      tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_jTextFieldSearchBikeKeyReleased

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        // TODO add your handling code here:
        
        if(jTextFieldOrderId.getText().equals("")||jTextFieldCustomerId.getText().equals("")||
        jTextFieldBikeId.getText().equals("")||jTextFieldContactNo.getText().equals("")
        ||jTextFieldTotalAmount.getText().equals("")||jTextFieldPaid.getText().equals("")||
              jTextFieldDue.getText().equals("")|| jTextFieldDate.getText().equals("") ){
           
           JOptionPane.showMessageDialog (this, "Please enter required fields");
       } 
       else{
           try
          {
              Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=PickARide;selectMethod=cursor", "sa", "123456");
            
            String query = "insert into ORDER_FORM (OrderId,CustomerId,BikeId,PhoneNo,O_Amount,O_Paid,O_Due,O_Date)values (? , ?, ?, ?, ?, ?, ? ,?)";
            
            PreparedStatement pst = connection.prepareStatement(query);
            
            pst.setString(1,jTextFieldOrderId.getText());
            pst.setString(2,jTextFieldCustomerId.getText());
            pst.setString(3,jTextFieldBikeId.getText());
            pst.setString(4,jTextFieldContactNo.getText());
            pst.setString(5,jTextFieldTotalAmount.getText());
            pst.setString(6,jTextFieldPaid.getText());
            pst.setString(7,jTextFieldDue.getText());
            pst.setString(8,jTextFieldDate.getText());
            
            pst.executeUpdate();
            
            String data[]= {jTextFieldOrderId.getText(),jTextFieldCustomerId.getText(),
           jTextFieldBikeId.getText(),jTextFieldContactNo.getText(),
           jTextFieldTotalAmount.getText(),jTextFieldPaid.getText(),
           jTextFieldDue.getText(),jTextFieldDate.getText()};
           
           DefaultTableModel tblModel = (DefaultTableModel)jTableOrder.getModel();
           tblModel.addRow(data);// adds row
           
            JOptionPane.showMessageDialog (this,"Information added");
	    
           jTextFieldOrderId.setText("");
           jTextFieldCustomerId.setText("");
           jTextFieldBikeId.setText("");
           jTextFieldContactNo.setText("");
           jTextFieldTotalAmount.setText("");
           jTextFieldPaid.setText("");
           jTextFieldDue.setText("");
           jTextFieldDate.setText("");

            
          } catch(Exception e){
              JOptionPane.showMessageDialog (this, e.getMessage());	
          }
       }

        
        
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jTableOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableOrderMouseClicked
        // TODO add your handling code here:
        
        DefaultTableModel tblModel = (DefaultTableModel)jTableOrder.getModel();

        //when row is selected, set data to textfield
        String OrderId = tblModel.getValueAt(jTableOrder.getSelectedRow(),0).toString();
        String CustomerId = tblModel.getValueAt(jTableOrder.getSelectedRow(),1).toString();
        String BikeId = tblModel.getValueAt(jTableOrder.getSelectedRow(),2).toString();
        String ContactNo = tblModel.getValueAt(jTableOrder.getSelectedRow(),3).toString();
        String O_Amount = tblModel.getValueAt(jTableOrder.getSelectedRow(),4).toString();
        String O_Paid = tblModel.getValueAt(jTableOrder.getSelectedRow(),5).toString();
        String O_Due = tblModel.getValueAt(jTableOrder.getSelectedRow(),6).toString();
        String O_Date = tblModel.getValueAt(jTableOrder.getSelectedRow(),7).toString();

        //set to textfield
        jTextFieldOrderId.setText(OrderId);
        jTextFieldCustomerId.setText(CustomerId);
        jTextFieldBikeId.setText(BikeId);
        jTextFieldContactNo.setText(ContactNo);
        jTextFieldTotalAmount.setText(O_Amount);
        jTextFieldPaid.setText(O_Paid);
        jTextFieldDue.setText(O_Due);
        jTextFieldDate.setText(O_Date);
       
        
    }//GEN-LAST:event_jTableOrderMouseClicked

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        // TODO add your handling code here:
        
        
        DefaultTableModel tblModel = (DefaultTableModel)jTableOrder.getModel();

        if(jTableOrder.getSelectedRowCount()==1){
            String OrderId = jTextFieldOrderId.getText();
            String CustomerId = jTextFieldCustomerId.getText();
            String BikeId = jTextFieldBikeId.getText();
            String ContactNo = jTextFieldContactNo.getText();
            String O_Amount = jTextFieldTotalAmount.getText();
            String O_Paid = jTextFieldPaid.getText();
            String O_Due = jTextFieldDue.getText();
            String O_Date = jTextFieldDate.getText();
            

            try
            {

                String query = "update ORDER_FORM set CustomerId=?,BikeId=?,PhoneNo=?,O_Amount=?,O_Paid=?,O_Due=?,O_Date=? where OrderId = ?";

                PreparedStatement pst = connection.prepareStatement(query);

                pst.setString(1,jTextFieldOrderId.getText());
                pst.setString(2,jTextFieldCustomerId.getText());
                pst.setString(3,jTextFieldBikeId.getText());
                pst.setString(4,jTextFieldContactNo.getText());
                pst.setString(5,jTextFieldTotalAmount.getText());
                pst.setString(6,jTextFieldPaid.getText());
                pst.setString(7,jTextFieldDue.getText());
                pst.setString(8,jTextFieldDate.getText());
               
                pst.executeUpdate();
                //set updated value to table row
                tblModel.setValueAt(OrderId,jTableOrder.getSelectedRow(),0);
                tblModel.setValueAt(CustomerId,jTableOrder.getSelectedRow(),1);
                tblModel.setValueAt(BikeId,jTableOrder.getSelectedRow(),2);
                tblModel.setValueAt(ContactNo,jTableOrder.getSelectedRow(),3);
                tblModel.setValueAt(O_Amount,jTableOrder.getSelectedRow(),4);
                tblModel.setValueAt(O_Paid,jTableOrder.getSelectedRow(),5);
                tblModel.setValueAt(O_Due,jTableOrder.getSelectedRow(),6);
                tblModel.setValueAt(O_Date,jTableOrder.getSelectedRow(),7);
               

                JOptionPane.showMessageDialog (this,"Update is successful");

                jTextFieldOrderId.setText("");
                jTextFieldCustomerId.setText("");
                jTextFieldBikeId.setText("");
                jTextFieldContactNo.setText("");
                jTextFieldTotalAmount.setText("");
                jTextFieldPaid.setText("");
                jTextFieldDue.setText("");
                jTextFieldDate.setText("");
                
            } catch(Exception e){
                JOptionPane.showMessageDialog (this, e.getMessage());
            }

            //update message
            //JOptionPane.showMessageDialog (this, "Update is successful");
        }
        else{
            if(jTableOrder.getRowCount()==0)
            JOptionPane.showMessageDialog (this, "Table is empty");
            else
            JOptionPane.showMessageDialog (this, "Please select single row");

        }
        
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jButtonPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrintActionPerformed
        // TODO add your handling code here:
        
                try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            connection = DriverManager.getConnection(
                "jdbc:sqlserver://localhost:1433;databaseName=PickARide;selectMethod=cursor", "sa", "123456");

            //System.out.println("DATABASE NAME IS:" + connection.getMetaData().getDatabaseProductName());

            Statement statement = connection.createStatement();
            ResultSet resultSet = statement
            .executeQuery("SELECT * FROM ORDER_FORM");

            while (resultSet.next()) {
                String OrderId = resultSet.getString("OrderId");
                String CustomerId = resultSet.getString("CustomerId");
                String BikeId = resultSet.getString("BikeId");
                String ContactNo = resultSet.getString("PhoneNo");
                String O_Amount = resultSet.getString("O_Amount");
                String O_Paid = resultSet.getString("O_Paid");
                String O_Due = resultSet.getString("O_Due");
                String O_Date = resultSet.getString("O_Date");
               

                String tbData[]={OrderId,CustomerId,BikeId,ContactNo,
                    O_Amount,O_Paid,O_Due,O_Date};

                DefaultTableModel tblModel = (DefaultTableModel)jTableOrder.getModel();
                tblModel.addRow(tbData);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        
    }//GEN-LAST:event_jButtonPrintActionPerformed

    private void jButtonCustomerRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCustomerRegActionPerformed
        // TODO add your handling code here:
         
        close();
        Customer customer = new Customer() ;
        customer.setVisible(true);
        
        
    }//GEN-LAST:event_jButtonCustomerRegActionPerformed

    private void jTextFieldSearchOrderKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchOrderKeyReleased
        // TODO add your handling code here:
         
        DefaultTableModel table = (DefaultTableModel)jTableOrder.getModel();
      String search = jTextFieldSearchOrder.getText();
      TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(table);
      jTableOrder.setRowSorter(tr);
      tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_jTextFieldSearchOrderKeyReleased

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        // TODO add your handling code here:
        
          
        close();
        HomePage hp = new HomePage() ;
        hp.setVisible(true);
    }//GEN-LAST:event_jButtonBackActionPerformed

    private void jButtonUpdateBikeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateBikeActionPerformed
        // TODO add your handling code here:
        close();
        Bike bike = new Bike() ;
        bike.setVisible(true);
    }//GEN-LAST:event_jButtonUpdateBikeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OF().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonCustomerReg;
    private javax.swing.JButton jButtonPrint;
    private javax.swing.JButton jButtonPrintBike;
    private javax.swing.JButton jButtonPrintCustomer;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JButton jButtonUpdateBike;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTableBike;
    private javax.swing.JTable jTableCustomer;
    private javax.swing.JTable jTableOrder;
    private javax.swing.JTextField jTextFieldBikeId;
    private javax.swing.JTextField jTextFieldContactNo;
    private javax.swing.JTextField jTextFieldCustomerId;
    private javax.swing.JTextField jTextFieldCustomerSearch;
    private javax.swing.JTextField jTextFieldDate;
    private javax.swing.JTextField jTextFieldDue;
    private javax.swing.JTextField jTextFieldOrderId;
    private javax.swing.JTextField jTextFieldPaid;
    private javax.swing.JTextField jTextFieldSearchBike;
    private javax.swing.JTextField jTextFieldSearchOrder;
    private javax.swing.JTextField jTextFieldTotalAmount;
    // End of variables declaration//GEN-END:variables
}
